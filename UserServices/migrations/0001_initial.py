# Generated by Django 5.1.6 on 2025-02-14 12:50

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Modules',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('module_name', models.CharField(max_length=50, unique=True)),
                ('module_icon', models.CharField(blank=True, max_length=50, null=True)),
                ('is_menu', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('module_url', models.CharField(blank=True, max_length=50, null=True)),
                ('display_order', models.IntegerField(default=0)),
                ('module_description', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='UserServices.modules')),
            ],
        ),
        migrations.CreateModel(
            name='ModuleUrls',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('url', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('module', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='UserServices.modules')),
            ],
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.TextField()),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('pincode', models.CharField(blank=True, max_length=10, null=True)),
                ('country', models.CharField(blank=True, choices=[('Congo', 'Congo'), ('Zambia', 'Zambia'), ('Tanzania', 'Tanzania'), ('Angola', 'Angola'), ('Uganda', 'Uganda'), ('Rwanda', 'Rwanda'), ('India', 'India'), ('USA', 'USA'), ('UK', 'UK'), ('Australia', 'Australia'), ('Canada', 'Canada'), ('Germany', 'Germany'), ('France', 'France'), ('Italy', 'Italy'), ('Japan', 'Japan'), ('China', 'China')], default='Congo', max_length=50, null=True)),
                ('profile_pic', models.JSONField()),
                ('account_status', models.CharField(blank=True, choices=[('Active', 'Active'), ('Inactive', 'Inactive'), ('Blocked', 'Blocked')], default='Active', max_length=50, null=True)),
                ('role', models.CharField(blank=True, choices=[('Admin', 'Admin'), ('Supplier', 'Supplier'), ('Customer', 'Customer'), ('Staff', 'Staff')], default='Admin', max_length=50, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('social_media_links', models.JSONField(blank=True, null=True)),
                ('addition_details', models.JSONField(blank=True, null=True)),
                ('language', models.CharField(blank=True, choices=[('English', 'English'), ('Spanish', 'Spanish'), ('French', 'French'), ('German', 'German'), ('Chinese', 'Chinese'), ('Japanese', 'Japanese'), ('Swahili', 'Swahili')], default='English', max_length=50, null=True)),
                ('departMent', models.CharField(blank=True, choices=[('IT', 'IT'), ('HR', 'HR'), ('Finance', 'Finance'), ('Sales', 'Sales'), ('Marketing', 'Marketing'), ('Production', 'Production'), ('Quality Control', 'Quality Control'), ('Purchase', 'Purchase'), ('Logistics', 'Logistics'), ('Customer Service', 'Customer Service'), ('R&D', 'R&D'), ('Legal', 'Legal'), ('Admin', 'Admin'), ('Security', 'Security'), ('Housekeeping', 'Housekeeping'), ('Maintenance', 'Maintenance'), ('Engineering', 'Engineering'), ('Design', 'Design'), ('Testing', 'Testing'), ('Training', 'Training'), ('Consulting', 'Consulting'), ('Support', 'Support'), ('Operations', 'Operations'), ('Management', 'Management'), ('Others', 'Others')], max_length=50, null=True)),
                ('designation', models.CharField(blank=True, choices=[('CEO', 'CEO'), ('CFO', 'CFO'), ('CTO', 'CTO'), ('CMO', 'CMO'), ('COO', 'COO'), ('CIO', 'CIO'), ('CISO', 'CISO'), ('CDO', 'CDO'), ('CRO', 'CRO'), ('CSO', 'CSO'), ('CPO', 'CPO'), ('CLO', 'CLO'), ('CBO', 'CBO'), ('CVO', 'CVO'), ('CNO', 'CNO'), ('CQO', 'CQO'), ('CPDO', 'CPDO'), ('CCO', 'CCO'), ('CDO', 'CDO'), ('CLO', 'CLO'), ('CBO', 'CBO'), ('CVO', 'CVO'), ('CNO', 'CNO'), ('CQO', 'CQO'), ('CPDO', 'CPDO'), ('CCO', 'CCO'), ('CDO', 'CDO'), ('CLO', 'CLO'), ('CBO', 'CBO'), ('CVO', 'CVO'), ('CNO', 'CNO'), ('CQO', 'CQO'), ('CPDO', 'CPDO'), ('CCO', 'CCO'), ('CDO', 'CDO'), ('CLO', 'CLO'), ('CBO', 'CBO'), ('CVO', 'CVO'), ('CNO', 'CNO'), ('CQO', 'CQO'), ('CPDO', 'CPDO'), ('CCO', 'CCO'), ('CDO', 'CDO'), ('CLO', 'CLO'), ('CBO', 'CBO'), ('CVO', 'CVO'), ('CNO', 'CNO'), ('CQO', 'CQO'), ('CPDO', 'CPDO'), ('CCO', 'CCO'), ('CDO', 'CDO'), ('CLO', 'CLO'), ('CBO', 'CBO'), ('CVO', 'CVO'), ('CNO', 'CNO'), ('CQO', 'CQO'), ('CPDO', 'CPDO'), ('CCO', 'CCO'), ('CDO', 'CDO'), ('CLO', 'CLO'), ('CBO', 'CBO'), ('CVO', 'CVO'), ('CNO', 'CNO'), ('CQO', 'CQO'), ('CPDO', 'CPDO'), ('CCO', 'CCO'), ('CDO', 'CDO'), ('CLO', 'CLO'), ('CBO', 'CBO'), ('CVO', 'CVO'), ('CNO', 'CNO'), ('CQO', 'CQO'), ('CPDO', 'CPDO'), ('CCO', 'CCO'), ('CDO', 'CDO'), ('CLO', 'CLO'), ('CBO', 'CBO'), ('CVO', 'CVO'), ('CNO', 'CNO'), ('Other', 'Other')], max_length=50, null=True)),
                ('time_zone', models.CharField(blank=True, choices=[('UTC-12:00', 'UTC-12:00'), ('UTC-11:00', 'UTC-11:00'), ('UTC-10:00', 'UTC-10:00'), ('UTC-09:30', 'UTC-09:30'), ('UTC-09:00', 'UTC-09:00'), ('UTC-08:00', 'UTC-08:00'), ('UTC-07:00', 'UTC-07:00'), ('UTC-06:00', 'UTC-06:00'), ('UTC-05:00', 'UTC-05:00'), ('UTC-04:00', 'UTC-04:00'), ('UTC-03:30', 'UTC-03:30'), ('UTC-03:00', 'UTC-03:00'), ('UTC-02:00', 'UTC-02:00'), ('UTC-01:00', 'UTC-01:00'), ('UTC', 'UTC'), ('UTC+01:00', 'UTC+01:00'), ('UTC+02:00', 'UTC+02:00'), ('UTC+03:00', 'UTC+03:00'), ('UTC+03:30', 'UTC+03:30'), ('UTC+04:00', 'UTC+04:00'), ('UTC+04:30', 'UTC+04:30'), ('UTC+05:00', 'UTC+05:00'), ('UTC+05:30', 'UTC+05:30'), ('UTC+05:45', 'UTC+05:45'), ('UTC+06:00', 'UTC+06:00'), ('UTC+06:30', 'UTC+06:30'), ('UTC+07:00', 'UTC+07:00'), ('UTC+08:00', 'UTC+08:00'), ('UTC+08:45', 'UTC+08:45'), ('UTC+09:00', 'UTC+09:00'), ('UTC+09:30', 'UTC+09:30'), ('UTC+10:00', 'UTC+10:00'), ('UTC+10:30', 'UTC+10:30'), ('UTC+11:00', 'UTC+11:00'), ('UTC+12:00', 'UTC+12:00'), ('UTC+12:45', 'UTC+12:45'), ('UTC+13:00', 'UTC+13:00'), ('UTC+14:00', 'UTC+14:00')], default='UTC+05:30', max_length=50, null=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('last_device', models.CharField(blank=True, max_length=50, null=True)),
                ('last_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('currency', models.CharField(blank=True, choices=[('USD', 'USD'), ('CDF', 'CDF'), ('EUR', 'EUR'), ('GBP', 'GBP')], default='USD', max_length=50, null=True)),
                ('domain_name', models.CharField(blank=True, max_length=50, null=True)),
                ('plan_type', models.CharField(blank=True, choices=[('Free', 'Free'), ('Basic', 'Basic'), ('Standard', 'Standard'), ('Premium', 'Premium'), ('Enterprise', 'Enterprise')], default='Free', max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('added_by_user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='added_by_user_id_user', to=settings.AUTH_USER_MODEL)),
                ('domain_user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='domain_user_id_user', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserShippingAddress',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('address_type', models.CharField(choices=[('Home', 'Home'), ('Office', 'Office'), ('Other', 'Other')], max_length=50)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('pincode', models.CharField(max_length=10)),
                ('country', models.CharField(choices=[('Congo', 'Congo'), ('Zambia', 'Zambia'), ('Tanzania', 'Tanzania'), ('Angola', 'Angola'), ('Uganda', 'Uganda'), ('Rwanda', 'Rwanda'), ('India', 'India'), ('USA', 'USA'), ('UK', 'UK'), ('Australia', 'Australia'), ('Canada', 'Canada'), ('Germany', 'Germany'), ('France', 'France'), ('Italy', 'Italy'), ('Japan', 'Japan'), ('China', 'China')], max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_shipping_address', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserPermissions',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('is_permission', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='UserServices.modules')),
                ('domain_user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='domain_user_id_user_permissions', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_permissions_1', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('activity', models.TextField()),
                ('activity_type', models.CharField(blank=True, max_length=50)),
                ('activity_date', models.DateTimeField(auto_now_add=True)),
                ('activity_ip', models.GenericIPAddressField()),
                ('activity_device', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('domain_user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='domain_user_id_activity_log', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_activity_log', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
